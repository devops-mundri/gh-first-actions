name: Build and Push Docker image to Amazon ECR

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Check for VERSION file
        run: |
          if [ ! -f VERSION ]; then
            echo "VERSION file does not exist."
            exit 1
          fi

      - name: Increment version
        id: vars
        run: |
          VERSION=$(cat VERSION)
          echo "Current version: $VERSION"
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo $NEW_VERSION > VERSION
          echo "::set-output name=version::$NEW_VERSION"

      - name: Commit and push new version
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add VERSION
          git commit -m "Increment version to ${{ steps.vars.outputs.version }}"
          git push

      - name: Build Docker image
        run: docker build -t github-actions-image:${{ steps.vars.outputs.version }} .

      - name: Tag Docker image
        run: docker tag github-actions-image:${{ steps.vars.outputs.version }} ${{ secrets.ECR_REPOSITORY }}:${{ steps.vars.outputs.version }}

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.ECR_REPOSITORY }}:${{ steps.vars.outputs.version }}

      - name: Checkout deployment repository
        uses: actions/checkout@v2
        with:
          repository: devops-mundri/gh-first-actions
          token: ${{ secrets.PAT_TOKEN }}
          path: deployment-repo

      - name: Update deployment YAML
        run: |
          cd deployment-repo
          IMAGE_VERSION=${{ steps.vars.outputs.version }}
          sed -i 's|image: .*dkr.ecr.*amazonaws.com/github-actions-image:.*|image: '${{ secrets.ECR_REPOSITORY }}':'${IMAGE_VERSION}'|' deployment.yaml

      - name: Commit and push changes to deployment repository
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          cd deployment-repo
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add deployment.yaml
          git commit -m "Update deployment.yaml with image version ${{ steps.vars.outputs.version }}"
          git push origin master
